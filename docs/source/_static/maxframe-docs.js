// this script makes prefix of full method name smaller
// while does not break original index of sphinx
window.addEventListener("load", function () {
    const articleNodes = document.getElementsByClassName("bd-article");
    if (undefined === articleNodes || articleNodes.length === 0) {
        // not a sphinx document: exit
        return;
    }

    const articleNode = articleNodes[0];

    if (articleNode.getElementsByClassName("sig-name").length === 0) {
        // not a document generated by autodoc: exit
        return;
    }

    const headerNode = articleNode.getElementsByTagName("h1")[0];

    let textNode = undefined;
    for (let i = 0; i < headerNode.childNodes.length; i++) {
        if (headerNode.childNodes[i].nodeName === "#text") {
            textNode = headerNode.childNodes[i];
            break;
        }
    }
    if (textNode === undefined) {
        // header does not contain any texts: exit
        return;
    }

    const nameParts = textNode.textContent.split(".");
    if (nameParts.length <= 1) {
        // header does not contain a dot: no processing
        return;
    }

    let classIdx;
    // find class name (with capital cases)
    for (classIdx = 0; classIdx < nameParts.length; classIdx++) {
        if (nameParts[classIdx] !== nameParts[classIdx].toLowerCase()) {
            break;
        }
    }
    if (classIdx === nameParts.length) {
        // class name not found, separate at last dot
        classIdx = nameParts.length - 1;
    }

    // generate prefix with smaller font size
    const prenameHtml = nameParts.slice(0, classIdx).join(".<wbr>");
    headerNode.insertAdjacentHTML(
        'beforebegin', `<div class="prename">${prenameHtml}.</div>\n<div class="empty"></div>`
    );
    textNode.textContent = nameParts.slice(classIdx, nameParts.length).join(".");
});
